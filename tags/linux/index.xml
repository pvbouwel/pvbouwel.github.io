<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Allinthemiddle</title><link>http://blog.allinthemiddle.com/tags/linux/</link><description>Recent content in Linux on Allinthemiddle</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 07 May 2024 14:57:49 +0200</lastBuildDate><atom:link href="http://blog.allinthemiddle.com/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Custom routing for Linux process</title><link>http://blog.allinthemiddle.com/posts/custom-routing-for-linux-process/</link><pubDate>Tue, 07 May 2024 14:57:49 +0200</pubDate><guid>http://blog.allinthemiddle.com/posts/custom-routing-for-linux-process/</guid><description>&lt;h1 id="control-network-routes-for-specific-processes-on-linux">Control network routes for specific processes on Linux&lt;/h1>
&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>I wanted to control the flow of packets for specific processes on my Linux (Ubuntu 22.04) such that they won&amp;rsquo;t go through a tunnel device which is setup for VPN connectivity. The VPN software is provided as is and I do not administer its configuration.&lt;/p>
&lt;p>Please note that this post assumes you have understanding of network routing and are equiped to troubleshoot problems. If not you should first learn how networks work first. Each network setup has its own specifics. Appliance vendors come up with defaults and automation for the most common scenarios. Custom configuration can conflict with that and might isolate you from network access. All responsibilities remain those of the reader.&lt;/p></description></item><item><title>Podman pitfalls</title><link>http://blog.allinthemiddle.com/posts/podman-pitfalls/</link><pubDate>Sat, 25 Nov 2023 15:28:48 +0200</pubDate><guid>http://blog.allinthemiddle.com/posts/podman-pitfalls/</guid><description>&lt;h1 id="raw-notes">Raw notes&lt;/h1>
&lt;p>This is not a full post but rather some common issues encountered with Podman and pointers to solutions.&lt;/p>
&lt;h2 id="fedora-docs-are-your-friend">Fedora docs are your friend&lt;/h2>
&lt;p>&lt;a href="https://docs.fedoraproject.org/en-US/fedora-coreos/">https://docs.fedoraproject.org/en-US/fedora-coreos/&lt;/a>&lt;/p>
&lt;h2 id="selinux-might-be-on">SELinux might be on&lt;/h2>
&lt;p>If you are having permission denied errors watch out for SELinux. Check your podman VM and verify &lt;code>/etc/selinux/config&lt;/code>. You can consider switching to permissive mode + reboot&lt;/p>
&lt;h2 id="certificate-errors">Certificate errors&lt;/h2>
&lt;h3 id="mitm">MITM&lt;/h3>
&lt;p>Some company like to or must inspect their users traffic. Generally this is done by having a transparent proxy which terminates SSL/TLS and uses a self-signed certificate that is owned by the company and can be considered trusted. The default podman VM wonÂ´t trust this certificate. You can try the following:&lt;/p></description></item><item><title>Belgium eid authentication in Firefox</title><link>http://blog.allinthemiddle.com/posts/be-eid-firefox-auth/</link><pubDate>Sun, 23 Jan 2022 13:24:51 +0200</pubDate><guid>http://blog.allinthemiddle.com/posts/be-eid-firefox-auth/</guid><description>&lt;h1 id="update-outdated-warning">UPDATE: outdated warning&lt;/h1>
&lt;p>By now the issues have been fixed upstream this post purely remains as documentation in case it has value for someone going on his own troubleshooting journey.&lt;/p>
&lt;h1 id="intro">Intro&lt;/h1>
&lt;p>Since 2003 the Belgian government issues electronic identity cards called &amp;ldquo;eID&amp;rdquo; cards. These cards have cryptographic keys on them that allow digital signatures. This enables you to authenticate to government e-services using a smart card reader, your eID and pin (which you have to set when you receive your eID card). While setting up the software on Windows is straight forward I found the process for Linux less trivial hence I like to documented it.&lt;/p></description></item><item><title>Setting up Pyhon 3.7 with SSL support</title><link>http://blog.allinthemiddle.com/posts/setup-of-python3.7-with-ssl/</link><pubDate>Sun, 23 Dec 2018 14:08:57 +0200</pubDate><guid>http://blog.allinthemiddle.com/posts/setup-of-python3.7-with-ssl/</guid><description>&lt;h1 id="intro">Intro&lt;/h1>
&lt;p>If you are lucky enough to have Python 3.7 in your OS repositories then you can skip this post if not you might find a hard time setting up Python 3.7 with SSL support. Python 3.7 requires a recent version of openssl but even when that one has been installed in my case it would not find it so I&amp;rsquo;m documenting the steps on how I got it to work.&lt;/p></description></item></channel></rss>