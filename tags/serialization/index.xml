<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Serialization on Allinthemiddle</title><link>http://blog.allinthemiddle.com/tags/serialization/</link><description>Recent content in Serialization on Allinthemiddle</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 03 Dec 2021 13:34:35 +0200</lastBuildDate><atom:link href="http://blog.allinthemiddle.com/tags/serialization/index.xml" rel="self" type="application/rss+xml"/><item><title>Serialization Anomily when using MVCC (The good, the bad &amp; the ugly)</title><link>http://blog.allinthemiddle.com/posts/serialization-anomyly-for-mvcc/</link><pubDate>Fri, 03 Dec 2021 13:34:35 +0200</pubDate><guid>http://blog.allinthemiddle.com/posts/serialization-anomyly-for-mvcc/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>When working in-depth with databases sooner or later you will encounter transaction isolation levels. If you are new to transaction isolation check out the &lt;a href="https://www.postgresql.org/docs/9.5/transaction-iso.html">Postgress transaction isolation documentation&lt;/a> because that documentation team did an amazing job! In this post I&amp;rsquo;d like to go into more depth on one issue mentioned on that page the serialization anomaly.&lt;/p>
&lt;h2 id="real-life-example">Real life example&lt;/h2>
&lt;p>A picture says more than a thousands words so let&amp;rsquo;s try to create a mental picture by talking about a real-life scenario. For this assume we are creating an application that has to manage financial accounts.&lt;/p></description></item></channel></rss>